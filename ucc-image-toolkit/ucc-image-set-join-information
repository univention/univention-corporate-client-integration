#!/bin/bash
#
# Univention Corporate Client
#  set account and domain information in ucc images to allow autojoins
#  during rollout
#
# Copyright (C) 2012-2014 Univention GmbH
#
# http://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <http://www.gnu.org/licenses/>.

trap "clean_up" EXIT SIGINT SIGTERM SIGKILL

clean_up () {
	if [ -n "$mountDir" ]; then
		umount "$mountDir"
		if [ $? -eq 0 ]; then
			rm -r "$mountDir"
		else
			echo "umount of $mountDir failed, please umount manually" | STDERR
			exit 1
		fi
	fi
}

function STDERR () {
	cat - 1>&2
}

usage () {
	echo "$(basename $0): set join account information in ucc image"
	echo ""
	echo "USAGE:"
	echo "  $(basename $0) -i FILE [OPTIONS]"
	echo ""
	echo "OPTIONS:"
	echo "  -i FILE"
	echo "     the ucc image file"
	echo "  -u USERNAME"
	echo "     join account username, asks if not provided"
	echo "  -d DOMAIN"
	echo "     use provided domain name, asks if not provided"
	echo "  -h"
	echo "     show this message"
}

IMAGE=""
ASK_USERNAME=true
ASK_DOMAIN=true

# options
while getopts 'i:u:d:h' OPTION; do
	case "$OPTION" in
		i)
			IMAGE="$OPTARG"
			;;
		u)
			ASK_USERNAME=false
			username="$OPTARG"
			;;
		d)
			ASK_DOMAIN=false
			domain="$OPTARG"
			;;

		h)
			usage
			exit 0
			;;
		*)
			usage 
			;;
	esac
done

# test
if [ ! -e "$IMAGE" ]; then
	echo "No image file given" | STDERR
	exit 1
fi
if ! file -b "$IMAGE" | grep -q UUID=; then
	echo "$IMAGE is not a valid ucc image" | STDERR
	exit 1
fi

# is image already mounted?
imageUUID="$(blkid -s UUID -o value "$IMAGE")"
if [ -z "$imageUUID" ]; then
	echo "failed to get uuid from image $IMAGE" | STDERR
fi
for loop in $(more /etc/mtab | grep '/dev/loop'| awk '{print $1}'); do
	if [ -b "$loop" ]; then
		uuid="$(blkid -s UUID -o value "$loop")" 
		if [ -n "$uuid" -a "$imageUUID" = "$uuid" ]; then
			echo "image $IMAGE seems to be mounted on $loop" | STDERR
			exit 1
		fi
	fi
done

# get username if needed
if $ASK_USERNAME; then
	read -p "Username:" username
fi

if [ -z "$username" ]; then
	echo "no username provided" | STDERR
	exit 1
fi

# ask for password
read -s -p "Password:" password
echo ""
read -s -p "Verify password:" passwordV2
echo ""
if [ ! "$password" = "$passwordV2" ]; then
	echo "Sorry, passwords do not match." | STDERR
	exit 1
fi

if [ -z "$password" ]; then
	echo "no password to set" | STDERR
	exit 1
fi

# get domain if needed
if $ASK_DOMAIN; then
	read -p "Domain:" domain
fi

if [ -z "$domain" ]; then
	echo "no domain provided" | STDERR
	exit 1
fi

# do it
mountDir="$(mktemp -d)"
mount -o loop "$IMAGE" "$mountDir"

chroot "$mountDir" sh -c "touch /etc/ucc_join_user; chmod 440 /etc/ucc_join_user"
chroot "$mountDir" sh -c "echo $username > /etc/ucc_join_user"
if [ ! $? -eq 0 ]; then
	"failed to set join username in $IMAGE" | STDERR
	exit 1
fi

chroot "$mountDir" sh -c "touch /etc/ucc_join_password; chmod 440 /etc/ucc_join_password"
chroot "$mountDir" sh -c "echo $password > /etc/ucc_join_password"
if [ ! $? -eq 0 ]; then
	"failed to set join password in $IMAGE" | STDERR
	exit 1
fi

chroot "$mountDir" sh -c "touch /etc/ucc_join_domain; chmod 440 /etc/ucc_join_domain"
chroot "$mountDir" sh -c "echo $domain > /etc/ucc_join_domain"
if [ ! $? -eq 0 ]; then
	"failed to set join domain in $IMAGE" | STDERR
	exit 1
fi

exit 0
