#
# Conf file example for the UCC image creator
#
#

[General]
# System architecture, host uses the host architecture
arch: host

# Ubuntu Codename of version
version: precise

# Hostname of the client image
hostname: ucc

# Domain name of the client image
domainname: local

# Hash of user root
# univention â†’ $6$haZB9aOW$Bprmq.8ZPpVR6c6VI0e1/H2aO5KOwCgqquwpv11r6OagavJomnTufU0WvqEt/xf.56uErUqQ5LZNYVn0XhW9x.
#  apt-get install whois
#  mkpasswd -H sha-512 univention
root_password: $6$haZB9aOW$Bprmq.8ZPpVR6c6VI0e1/H2aO5KOwCgqquwpv11r6OagavJomnTufU0WvqEt/xf.56uErUqQ5LZNYVn0XhW9x.

# Use automatic login
automatic_login: true
# User is not needed for lightdm
# automatic_login_user: test
# automatic_login_password: $6$haZB9aOW$Bprmq.8ZPpVR6c6VI0e1/H2aO5KOwCgqquwpv11r6OagavJomnTufU0WvqEt/xf.56uErUqQ5LZNYVn0XhW9x.

[Software]
# Ubuntu Mirror
mirror: http://ubuntu.knut.univention.de/ubuntu/

# Use updates repository?
updates: true
# Use security repository?
security: true
# Use backports repository?
backports: true

# Use universe repository?
universe: true
# Use multiverse repository?
multiverse: false
# Use partner repository?
partner: false

# TODO: not yet implemented
# Exclude these packages from botstrap
# exclude_bootstrap:
#  ubuntu-minimal

# Install UCC packages
ucc: true

# more sources.list repositories
sources_list:
 deb http://omar.knut.univention.de/build2/ ucs_3.0-0-ucc/all/
 deb http://omar.knut.univention.de/build2/ ucs_3.0-0-ucc/$(ARCH)/

# These packages will be installed without recommends
packages_no_recommends:
 gconf2 # gconftool-2 is used by the autologin
 gnome-icon-theme

# These packages will be installed
packages:
 # Kernel
 linux-image-generic
 # Boot tools
 parted
 # Tools
 firefox
 freerdp-x11
 openssh-server
 ## Desktop
 lightdm-gtk-greeter
 kubuntu-full lirc- network-manager-

# TODO:
#  GnuPG Archive Keys

[Image]
# Version of image
version: 1

# Image size in GB
# size: 0.5
size: 7.0

# Filesystem of image
filesystem: ext4

# Name of output image
name: ucc-desktop-v%(version)s.img

# Extra kernel modules for the initrd
initramfs_modules:
 overlayfs
 aufs

# Kernel name
kernel: %(name)s.kernel

# Initrd name
initrd: %(name)s.initrd

# Build also an ISO image which can be used
# to roll out this UCC image via CD or USB stick
iso: %(name)s.iso

# Copy the UCC image into the ISO image
include_image_on_iso: true

# bzip compressed
bzip_compressed: false

[Partitioning]

# Alternate partition script, which can be used during the
# paritioning in the initrd, instead of using the UCC partition
# built-in.
# script: /usr/share/partition/partition-script.sh

# Device which should be partitioned, auto should determine a device
# Other examples hda, sda, ...
# At the moment only one device is supported
device: auto

# Prompt for continuation
continuation_prompt: true

# Continuation message
continuation_message: 
 This image is configured so that it is installed on this computer. This will
 delete the local partitions on this computer and all the local data will be
 deleted. Please ensure you remove all storage devices, USB devices and so
 forth from this computer.

# List of partitions which should be removed, the devices all is also possible.
# auto will remove all partitions from the device which has been automatically 
# determined
# Use with care!
# remove_partitions: all
# remove_partitions: hda1
# hda2
remove_partitions: auto

# A blacklist of devices which should not be paritionied
# device_blacklist: removable
#  hdb
#  hdc
#  sdd

# Let the first partition begin here (in MB)
partition_start: 10

install_grub: false

# Partition defintions
#  partition<NUMBER>_name

#  # Size of the image, possible units MB and %. expand is also possible.
#  partition<NUMBER>_size

#  partition<NUMBER>_fs

#  # Only primary is supported
#  partition<NUMBER>_type

#  partition<NUMBER>_mountpoint

#  # Mount this partition into the booted system by default
#  partition<NUMBER>_image_mount

#  # Copy files from the mounted image into the parttion, this is useful
#  # when the partition is mounted into the chroot system
#  partition<NUMBER>_copy_files

partition1_name: efi
partition1_size: 50
partition1_flags: bios_grub
partition1_image_mount: false
partition1_copy_files: false

partition2_name: boot
partition2_size: 500
partition2_fs: ext4
partition2_mountpoint: /boot
partition2_image_mount: true
partition2_copy_files: true

partition3_name: swap
partition3_size: 512
partition3_fs: swap
partition3_image_mount: true

partition4_name: root
partition4_size: 6000
partition4_fs: ext4
partition4_mountpoint: /
partition4_image_mount: false

partition5_name: home
partition5_size: expand
partition5_fs: ext4
partition5_mountpoint: /home
partition5_image_mount: true
partition5_copy_files: false

